## Autogenerated by Scribe. DO NOT MODIFY.

name: user
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: rest/V1/user/me
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get logged-in user details'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "id": 1,
               "name": "Nome completo",
               "email": "teste@email.com",
               "cnpj": "123546789",
               "razao_social": "Razao social",
               "responsible_name": "Nome",
               "telephone": "123456789",
               "address": null
          }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Unauthorized"}'
        headers: []
        description: Unautorized
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: rest/V1/user/create-user
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cnpj:
        name: cnpj
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      razao_social:
        name: razao_social
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      responsible_name:
        name: responsible_name
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
      password_confirmation: consequatur
      cnpj: consequatur
      razao_social: consequatur
      responsible_name: consequatur
      telephone: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "bearer_token": "tokenabcde",
             "validuntil": "1747515969",
            }
        headers: []
        description: success
        custom: []
      -
        status: 422
        content: '{"message": "Invalid data"}'
        headers: []
        description: 'Invalid data'
        custom: []
      -
        status: 422
        content: '{"message": "Invalid CNPJ or password"}'
        headers: []
        description: 'Invalid CNPJ or password'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'rest/V1/user/validate-cnpj-is-registered/{CNPJ}'
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate CNPJ is registered'
      description: 'Validate if a CNPJ is already registered'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      CNPJ:
        name: CNPJ
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      CNPJ: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"result":false}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          0: 'Content-Type: application/json'
        description: null
        custom: []
    responseFields:
      result:
        name: result
        description: 'CNPJ is registered'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: rest/V1/user/generate-token
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate user token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cnpj:
        name: cnpj
        description: CNPJ
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: password
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      cnpj: consequatur
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "bearer_token": "tokenabcde",
            "validuntil": "1747515969",
           }
        headers: []
        description: success
        custom: []
      -
        status: 401
        content: '{"message": "Invalid CNPJ or password"}'
        headers: []
        description: 'Invalid CNPJ or password'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
